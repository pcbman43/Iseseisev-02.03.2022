{"ast":null,"code":"import { injectableHook } from '../../core/inject';\nexport const PriceCalculationService = () => {\n  const calculate = (price, weight, creditCard) => {\n    let deliveryFee = weight < 5 || price > 100 ? 0 : weight;\n    let result = price;\n    if (isNaN(price) || isNaN(weight)) return undefined;\n\n    if (price > 200) {\n      result = creditCard && weight < 5 ? result * 0.9 : result * 0.85;\n    }\n\n    if (price < 200 && creditCard) {\n      result = result * 0.96;\n    }\n\n    return Math.round((result + deliveryFee) * 10) / 10;\n  };\n\n  return {\n    calculate\n  };\n};\n_c = PriceCalculationService;\nexport const usePriceCalculationService = injectableHook(PriceCalculationService);\n\nvar _c;\n\n$RefreshReg$(_c, \"PriceCalculationService\");","map":{"version":3,"sources":["/home/mihkel/Projects_Folder/Iseseisev_töö-02.03.2022/src/forms/price-calculations/PriceCalculationsService.ts"],"names":["injectableHook","PriceCalculationService","calculate","price","weight","creditCard","deliveryFee","result","isNaN","undefined","Math","round","usePriceCalculationService"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,mBAA7B;AAMA,OAAO,MAAMC,uBAAuB,GAAG,MAAmC;AACxE,QAAMC,SAAS,GAAG,CAACC,KAAD,EAAgBC,MAAhB,EAAgCC,UAAhC,KAA4E;AAC5F,QAAIC,WAAW,GAAGF,MAAM,GAAG,CAAT,IAAcD,KAAK,GAAG,GAAtB,GAA4B,CAA5B,GAAgCC,MAAlD;AACA,QAAIG,MAAM,GAAGJ,KAAb;AAEA,QAAIK,KAAK,CAACL,KAAD,CAAL,IAAgBK,KAAK,CAACJ,MAAD,CAAzB,EAAmC,OAAOK,SAAP;;AAEnC,QAAIN,KAAK,GAAG,GAAZ,EAAiB;AACfI,MAAAA,MAAM,GAAGF,UAAU,IAAID,MAAM,GAAG,CAAvB,GAA2BG,MAAM,GAAG,GAApC,GAA0CA,MAAM,GAAG,IAA5D;AACD;;AACD,QAAIJ,KAAK,GAAG,GAAR,IAAeE,UAAnB,EAA+B;AAC7BE,MAAAA,MAAM,GAAGA,MAAM,GAAG,IAAlB;AACD;;AAED,WAAOG,IAAI,CAACC,KAAL,CAAW,CAACJ,MAAM,GAAGD,WAAV,IAAyB,EAApC,IAA0C,EAAjD;AACD,GAdD;;AAgBA,SAAO;AAACJ,IAAAA;AAAD,GAAP;AACD,CAlBM;KAAMD,uB;AAoBb,OAAO,MAAMW,0BAA0B,GAAGZ,cAAc,CAACC,uBAAD,CAAjD","sourcesContent":["import {injectableHook} from '../../core/inject';\r\n\r\ntype PriceCalculationServiceData = {\r\n  calculate: (price: number, weight: number, creditCard: boolean) => number | undefined;\r\n};\r\n\r\nexport const PriceCalculationService = (): PriceCalculationServiceData => {\r\n  const calculate = (price: number, weight: number, creditCard: boolean): number | undefined => {\r\n    let deliveryFee = weight < 5 || price > 100 ? 0 : weight;\r\n    let result = price;\r\n    \r\n    if (isNaN(price) || isNaN(weight)) return undefined;\r\n    \r\n    if (price > 200) {\r\n      result = creditCard && weight < 5 ? result * 0.9 : result * 0.85\r\n    }\r\n    if (price < 200 && creditCard) {\r\n      result = result * 0.96;\r\n    }\r\n    \r\n    return Math.round((result + deliveryFee) * 10) / 10;\r\n  };\r\n  \r\n  return {calculate};\r\n};\r\n\r\nexport const usePriceCalculationService = injectableHook(PriceCalculationService);"]},"metadata":{},"sourceType":"module"}