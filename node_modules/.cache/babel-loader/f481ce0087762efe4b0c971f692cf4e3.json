{"ast":null,"code":"import { injectableHook } from '../../core/inject';\nexport const PaidVacationDaysService = () => {\n  const calculate = (age, service) => {\n    if (isNaN(age) || isNaN(service)) return undefined;\n    let days = 22;\n\n    if (age >= 45 && age < 60 || service >= 15 && service < 30) {\n      days = days + 2;\n    }\n\n    if (age < 18 || age >= 60 || service >= 30) {\n      days = days + 5;\n    }\n\n    if (age >= 60 && service >= 30) {\n      days = days + 3;\n    }\n\n    return days;\n  };\n\n  return {\n    calculate\n  };\n};\n_c = PaidVacationDaysService;\nexport const usePaidVacationDaysService = injectableHook(PaidVacationDaysService);\n\nvar _c;\n\n$RefreshReg$(_c, \"PaidVacationDaysService\");","map":{"version":3,"sources":["/home/mihkel/Projects_Folder/Iseseisev_töö-02.03.2022/src/forms/paid-vacation-days/PaidVacationDaysService.ts"],"names":["injectableHook","PaidVacationDaysService","calculate","age","service","isNaN","undefined","days","usePaidVacationDaysService"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,mBAA7B;AAMA,OAAO,MAAMC,uBAAuB,GAAG,MAAmC;AACxE,QAAMC,SAAS,GAAG,CAACC,GAAD,EAAcC,OAAd,KAAsD;AACtE,QAAIC,KAAK,CAACF,GAAD,CAAL,IAAcE,KAAK,CAACD,OAAD,CAAvB,EAAkC,OAAOE,SAAP;AAElC,QAAIC,IAAI,GAAG,EAAX;;AAEA,QAAKJ,GAAG,IAAI,EAAP,IAAaA,GAAG,GAAG,EAApB,IAA4BC,OAAO,IAAI,EAAX,IAAiBA,OAAO,GAAG,EAA3D,EAAgE;AAC9DG,MAAAA,IAAI,GAAGA,IAAI,GAAG,CAAd;AACD;;AAED,QAAIJ,GAAG,GAAG,EAAN,IAAYA,GAAG,IAAI,EAAnB,IAAyBC,OAAO,IAAI,EAAxC,EAA4C;AAC1CG,MAAAA,IAAI,GAAGA,IAAI,GAAG,CAAd;AACD;;AAED,QAAIJ,GAAG,IAAI,EAAP,IAAaC,OAAO,IAAI,EAA5B,EAAgC;AAC9BG,MAAAA,IAAI,GAAGA,IAAI,GAAG,CAAd;AACD;;AAED,WAAOA,IAAP;AACD,GAlBD;;AAoBA,SAAO;AAACL,IAAAA;AAAD,GAAP;AACD,CAtBM;KAAMD,uB;AAwBb,OAAO,MAAMO,0BAA0B,GAAGR,cAAc,CAACC,uBAAD,CAAjD","sourcesContent":["import {injectableHook} from '../../core/inject';\r\n\r\ntype PaidVacationDaysServiceData = {\r\n  calculate: (age: number, service: number) => number | undefined;\r\n};\r\n\r\nexport const PaidVacationDaysService = (): PaidVacationDaysServiceData => {\r\n  const calculate = (age: number, service: number): number | undefined => {\r\n    if (isNaN(age) || isNaN(service)) return undefined;\r\n    \r\n    let days = 22;\r\n    \r\n    if ((age >= 45 && age < 60) || (service >= 15 && service < 30)) {\r\n      days = days + 2;\r\n    }\r\n    \r\n    if (age < 18 || age >= 60 || service >= 30) {\r\n      days = days + 5;\r\n    }\r\n    \r\n    if (age >= 60 && service >= 30) {\r\n      days = days + 3;\r\n    }\r\n    \r\n    return days;\r\n  };\r\n  \r\n  return {calculate};\r\n};\r\n\r\nexport const usePaidVacationDaysService = injectableHook(PaidVacationDaysService);"]},"metadata":{},"sourceType":"module"}