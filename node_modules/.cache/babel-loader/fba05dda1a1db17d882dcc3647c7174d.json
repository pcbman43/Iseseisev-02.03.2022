{"ast":null,"code":"import { injectableHook } from '../../core/inject';\nexport const CourseGradeService = () => {\n  const calculate = (be, le, wp) => {\n    if (isNaN(be) || isNaN(le) || isNaN(wp)) return undefined;\n    const sum = be + le + wp;\n\n    if ([be, le, wp].some(points => points < 25) || sum < 76) {\n      return 'failed';\n    }\n\n    if (sum >= 76 && sum <= 100) {\n      return 'satisfactory';\n    }\n\n    if (sum >= 101 && sum <= 125) {\n      return 'good';\n    }\n\n    if (sum > 125) {\n      return 'very good';\n    }\n\n    return undefined;\n  };\n\n  return {\n    calculate\n  };\n};\n_c = CourseGradeService;\nexport const useCourseGradeService = injectableHook(CourseGradeService);\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseGradeService\");","map":{"version":3,"sources":["/home/mihkel/Projects_Folder/Iseseisev_töö-02.03.2022/src/forms/course-grade/CourseGradeService.ts"],"names":["injectableHook","CourseGradeService","calculate","be","le","wp","isNaN","undefined","sum","some","points","useCourseGradeService"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,mBAA7B;AAOA,OAAO,MAAMC,kBAAkB,GAAG,MAA8B;AAC9D,QAAMC,SAAS,GAAG,CAACC,EAAD,EAAaC,EAAb,EAAyBC,EAAzB,KAAuE;AACvF,QAAIC,KAAK,CAACH,EAAD,CAAL,IAAaG,KAAK,CAACF,EAAD,CAAlB,IAA0BE,KAAK,CAACD,EAAD,CAAnC,EAAyC,OAAOE,SAAP;AAEzC,UAAMC,GAAG,GAAGL,EAAE,GAAGC,EAAL,GAAUC,EAAtB;;AAEA,QAAI,CAACF,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaI,IAAb,CAAkBC,MAAM,IAAIA,MAAM,GAAG,EAArC,KAA4CF,GAAG,GAAG,EAAtD,EAA0D;AACxD,aAAO,QAAP;AACD;;AAED,QAAIA,GAAG,IAAI,EAAP,IAAaA,GAAG,IAAI,GAAxB,EAA6B;AAC3B,aAAO,cAAP;AACD;;AAED,QAAIA,GAAG,IAAI,GAAP,IAAcA,GAAG,IAAI,GAAzB,EAA8B;AAC5B,aAAO,MAAP;AACD;;AAED,QAAIA,GAAG,GAAG,GAAV,EAAe;AACb,aAAO,WAAP;AACD;;AAED,WAAOD,SAAP;AACD,GAtBD;;AAwBA,SAAO;AAACL,IAAAA;AAAD,GAAP;AACD,CA1BM;KAAMD,kB;AA4Bb,OAAO,MAAMU,qBAAqB,GAAGX,cAAc,CAACC,kBAAD,CAA5C","sourcesContent":["import {injectableHook} from '../../core/inject';\r\nimport {CourseGradeResult} from './types';\r\n\r\ntype CourseGradeServiceData = {\r\n  calculate: (be: number, le: number, wp: number) => CourseGradeResult | undefined;\r\n};\r\n\r\nexport const CourseGradeService = (): CourseGradeServiceData => {\r\n  const calculate = (be: number, le: number, wp: number): CourseGradeResult | undefined => {\r\n    if (isNaN(be) || isNaN(le) || isNaN(wp)) return undefined;\r\n    \r\n    const sum = be + le + wp;\r\n    \r\n    if ([be, le, wp].some(points => points < 25) || sum < 76) {\r\n      return 'failed';\r\n    }\r\n    \r\n    if (sum >= 76 && sum <= 100) {\r\n      return 'satisfactory';\r\n    }\r\n    \r\n    if (sum >= 101 && sum <= 125) {\r\n      return 'good';\r\n    }\r\n    \r\n    if (sum > 125) {\r\n      return 'very good';\r\n    }\r\n    \r\n    return undefined;\r\n  };\r\n  \r\n  return {calculate};\r\n};\r\n\r\nexport const useCourseGradeService = injectableHook(CourseGradeService);"]},"metadata":{},"sourceType":"module"}